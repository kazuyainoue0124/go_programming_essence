package foo

// Go の文字列は　+ で結合できる
// s := "Hello "
// s += name

// 文字列はバイト列で構成されているため、添え字を使ってアクセスできる
// s := "Hello"
// fmt.Printf("%c", s[0]) // H が表示される

// Go の string はイミュータブルなので、内容を書き換えるにはバイト列に変換して行う
// s := "Hello"
// b := []byte(s)
// b[0] = "h" // "hello" になる
// s = string(b) // イミュータブルなので再代入が必要

// Go には　rune という型があり、これは Unicode のコードポイント列を表す
// s := "こんにちわ世界"
// rs := []rune(s)
// rs[4] = 'は' // こんにちは世界 になる
// s = string(rs) // イミュータブルなので再代入が必要

// 固定長の配列は[:]という指定をすることでスライスに変換できる
// var b [4]byte
// b2 := b[:] // b2 はスライス

// ``で囲むことで複数行の文字列を扱える
// var content = `複数行の
// 文章からなる
// テキストです。
// `
